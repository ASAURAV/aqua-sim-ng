//...

#ifndef AQUA_SIM_STATIC_ROUTING_H
#define AQUA_SIM_STATIC_ROUTING_H


#include "aqua-sim-routing.h"
#include "ns3/address.h"	
#include <map>

using namespace std; 

namespace ns3 {

/*header length of Static routing*/
#define SR_HDR_LEN (3*sizeof(Address)+sizeof(int))		//Construct new header to match static...

class AquaSimStaticRouting : public AquaSimRouting {
public:
	AquaSimStaticRouting(void);
	virtual ~AquaSimStaticRouting(void);

	static TypeId GetTypeId(void);

	void Recv(Ptr<Packet>);   //Handler not implemented.
	void SetRouteFile(char *routeFile);

protected:
	bool m_hasSetRouteFile;
	bool m_hasSetNode;
	char m_routeFile[100];

	void ReadRouteTable(char *filename);
	Address FindNextHop(const Ptr<Packet> p);

private:
	std::map<Address, Address> m_rTable;

};  // class AquaSimStaticRouting

}  //namespace ns3

#endif /* AQUA_SIM_STATIC_ROUTING_H */
